# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Node and deploy terraform
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  PROJECT_NAME : scheduler-madness
  CI: false
  ENV_NAME: development
  
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: 
    branches: [ "main" ]

jobs:
  TFbuild:
    runs-on: ubuntu-latest
        
    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: true
        
    - uses: hashicorp/setup-terraform@v2
    
    - name: TF Init
      run: terraform init
      working-directory:  Infra

        
    - name: TF Plan
      working-directory:  Infra
      run: terraform plan
    
    - name: TF Apply
      working-directory:  Infra
      run: terraform apply  -auto-approve
      

  NodeBuild:
    needs: TFbuild
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.13 ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: true

    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Insall
      working-directory: Website/scheduler-web-app
      run: npm ci

    - name: EnvDocMove
      working-directory: Website/scheduler-web-app/src/environments
      run:  cp environment.$ENV_NAME.ts environment.ts

    - name: Build
      working-directory: Website/scheduler-web-app
      run:  npm run build

    - name: Upload files
      run:  aws s3 cp Website/scheduler-web-app/dist s3://$PROJECT_NAME-site-assets/ --recursive
